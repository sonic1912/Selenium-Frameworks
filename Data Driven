Source: https://www.edureka.co

Data Driven Framework: DataSet + TestScript

package DataDriven;
 
import org.openqa.selenium.By;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
 
public class DDTExcel
{
 ChromeDriver driver;
  
 @Test(dataProvider="testdata")
 public void DemoProject(String username, String password) throws InterruptedException
 {
 System.setProperty("webdriver.chrome.driver", "C:\\Users\\Vardhan\\Downloads\\chromedriver.exe");
 driver = new ChromeDriver();
  
 driver.get("http://newtours.demoaut.com/");
  
 driver.findElement(By.name("userName")).sendKeys(username);
 driver.findElement(By.name("password")).sendKeys(password);
 driver.findElement(By.name("login")).click();
  
 Thread.sleep(5000);
  
 Assert.assertTrue(driver.getTitle().matches("Find a Flight: Mercury Tours:"), "Invalid credentials");
 System.out.println("Login successful");
 }
  
 @AfterMethod
 void ProgramTermination()
 {
 driver.quit();
 }
 
@DataProvider(name="testdata")
 public Object[][] TestDataFeed()
 {  
 ReadExcelFile config = new ReadExcelFile("C:\\Users\\Vardhan\\workspace\\Selenium\\LoginCredentials.xlsx");
  
 int rows = config.getRowCount(0);
  
 Object[][] credentials = new Object[rows][2];
 
for(int i=0;i<rows;i++)
 {
 credentials[i][0] = config.getData(0, i, 0);
 credentials[i][1] = config.getData(0, i, 1);
 }
  
 return credentials;
 }
}

package DataDriven;
 
import java.io.File;
import java.io.FileInputStream;
 
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
 
public class ReadExcelFile
{
 XSSFWorkbook wb;
 XSSFSheet sheet;
  
 public ReadExcelFile(String excelPath)
 {
 try
 {
 File src = new File(excelPath);
 FileInputStream fis = new FileInputStream(src);
 wb = new XSSFWorkbook(fis);
 }
  
 catch(Exception e)
 {
 System.out.println(e.getMessage());
 }
 }
  
 public String getData(int sheetnumber, int row, int column)
 {
 sheet = wb.getSheetAt(sheetnumber);
 String data = sheet.getRow(row).getCell(column).getStringCellValue();
 return data;
 }
  
 public int getRowCount(int sheetIndex)
 {
 int row = wb.getSheetAt(sheetIndex).getLastRowNum();
 row = row + 1;
 return row;
 }
}
